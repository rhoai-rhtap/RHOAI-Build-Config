name: Push To Stage
run-name: Push To Stage
on:
  workflow_dispatch:
    inputs:
      release_branch:
        description: 'Release Branch'
        required: true
      rhoai_version:
        description: 'Current RHOAI version, eg v2.14.0'
        required: true
      commit:
        description: 'Commit sha of the catalog to be pushed to stage'
        default: ''
permissions:
  contents: write
jobs:
  push-to-stage:
    runs-on: ubuntu-latest
    container:
      image: quay.io/rhoai/rhoai-task-toolset:latest
      options: --privileged
    steps:
      - name: Git checkout RBC main
        uses: actions/checkout@v4
        with:
          ref: main
          path: main
      - name: Get Ref
        id: get-ref
        run: |
          ref=${{ github.event.inputs.release_branch }}
          if [[ -n "${{ github.event.inputs.commit }}" ]];
          then
            ref=${{ github.event.inputs.commit }}
            echo "ref=${ref}" >> $GITHUB_OUTPUT
          fi
          echo "ref=$ref"
      - name: Git checkout RBC release
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.get-ref.outputs.ref }}
          path: ${{ github.event.inputs.release_branch }}
      - name: Git checkout utils
        uses: actions/checkout@v4
        with:
          repository: rhoai-rhtap/RHOAI-Konflux-Automation
          ref: main
          path: utils
      - name: Install dependencies
        run: |
          os="$(uname -s | tr '[:upper:]' '[:lower:]')"
          arch="$(uname -m | sed 's/x86_64/amd64/')"
          yq_version="v4.44.3"
          yq_filename="yq-$yq_version"
          echo "-> Downloading yq" >&2
          curl -sSfLo "$yq_filename" "https://github.com/mikefarah/yq/releases/download/$yq_version/yq_${os}_${arch}"
          chmod +x $yq_filename
          ln -s $yq_filename yq
          cp $yq_filename /usr/local/bin/yq
          
          pip install -r utils/utils/bundle-processor/requirements.txt

      - name: Push To Stage
        env:
          BRANCH: ${{ github.event.inputs.release_branch }}
          RHOAI_VERSION: ${{ github.event.inputs.rhoai_version }}
          COMMIT: ${{ github.event.inputs.commit }}
        run: |
          #Declare basic variables
          OPENSHIFT_VERSION=v4.13
          COMPONENT_SUFFIX=${RHOAI_VERSION/./-}
          OPERATOR_BUNDLE_COMPONENT_NAME=odh-operator-bundle

          #Declare FBC processing variables
          BUILD_CONFIG_PATH=${BRANCH}/config/build-config.yaml
          CATALOG_YAML_PATH=main/catalog/${OPENSHIFT_VERSION}/rhods-operator/catalog.yaml
          PATCH_YAML_PATH=${BRANCH}/catalog/catalog-patch.yaml
          RELEASE_CATALOG_YAML_PATH=${BRANCH}/catalog/${OPENSHIFT_VERSION}/rhods-operator/catalog.yaml
          OUTPUT_CATALOG_PATH=main/catalog/${OPENSHIFT_VERSION}/rhods-operator/catalog.yaml

          #Invoke the stage promoter to patch the main catalog with release branch
          python3 utils/utils/stage-promoter/stage_promoter.py -op stage-catalog-patch -c ${CATALOG_YAML_PATH} -p ${PATCH_YAML_PATH} -r ${RELEASE_CATALOG_YAML_PATH} -o ${OUTPUT_CATALOG_PATH} -v ${RHOAI_VERSION}
      - name: Commit and push the changes to main branch
        uses: actions-js/push@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
          message: "Patching the stage catalog with ${{ github.event.inputs.release_branch }} ${{ github.event.inputs.commit }}"
          repository: rhoai-rhtap/RHOAI-Build-Config
          directory: main
          author_name: Openshift-AI DevOps
          author_email: openshift-ai-devops@redhat.com
